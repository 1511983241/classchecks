<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
		http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang-4.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.2.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.2.xsd">

	<!-- 加载资源文件 -->
	<context:property-placeholder location="classpath:config/jdbc/mysql-run.properties"/>

	<!-- 自动扫描的包名，这里主要是扫描service包
		<context:component-scan/>包含了<context:annotation-config/>的功能
	-->
	<context:component-scan base-package="com.classchecks.client,com.classchecks.common.basic.service,com.classchecks.controller">
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- 导入数据源配置文件 -->
	<import resource="datasource/mysql-datasource.xml"/>
	
	<!-- 配置mybatisSqlSessionFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"/>
		<property name="configLocation" value="classpath:config/mybatis/sqlMapconfig.xml"/>
	</bean>
	
	<!-- mybatis mapper扫描器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!-- 扫描包路径，如果需要扫描多个包，中间使用半角逗号隔开 -->
		<!-- 
			加"*"号通配所有模块下的mapper，因为不在"*"号，在com.classchecks.client
			下扫描的话，会将Service层的接口也扫描到
		-->
		<property name="basePackage" value="com.classchecks.client.**.mapper,com.classchecks.common.basic.mapper"></property>
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>
	
	<!-- 事务配置 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 使用annotation注解方式配置事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true"/>

	<!-- 用于持有ApplicationContext,可以使用SpringContextHolder.getBean('xxxx')的静态方法得到spring bean对象 -->  
	<bean class="com.framework.context.SpringContextHolder" lazy-init="false"/>
	<!-- ServletContext -->
	<bean class="com.framework.context.ServletContextHolder" lazy-init="false"/>
	<!-- 加载opencv动态链接库 -->
	<bean class="com.framework.basic.service.PostConstructService"/>
</beans>
